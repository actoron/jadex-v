plugins 
{
    id 'java-library'
}

if(System.getProperty("PUBLISH_SCRIPT_PATH"))
	apply from: System.getProperty("PUBLISH_SCRIPT_PATH")

group = 'jadex'

sourceCompatibility = 1.17

repositories
{
    mavenCentral()
}

dependencies
{
	implementation 'jadex:common:5.0.0'
	implementation 'jadex:collection:5.0.0'
	implementation 'jadex:classreader:5.0.0'
	implementation 'jadex:future:5.0.0'
    implementation 'jadex:core:5.0.0'
    implementation 'jadex:model:5.0.0'
    implementation 'jadex:execution:5.0.0'
    implementation 'jadex:micro:5.0.0'
    implementation 'jadex:providedservice:5.0.0'
    implementation 'jadex:providedservicemicro:5.0.0'
    implementation 'jadex:requiredservice:5.0.0'
    implementation 'jadex:requiredservicemicro:5.0.0'
    implementation 'jadex:publishservice:5.0.0'
    implementation 'jadex:publishservicejetty:5.0.0'
    //implementation 'jadex:simulation:5.0.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
}

processResources {
    from ('src/main/java') {
        include '**/*.png'
        include '**/*.html'
        include '**/*.js'
        include '**/*.css'
        include '**/*.ttf'
    }
}

task runHelloWorld(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.helloworld.HelloWorldAgent'
}

task runMandelbrot(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.mandelbrot_new.MainWeb'
}

task runQuiz(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.quiz.Main'
}

task runGobble(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.gobble.GobbleAgent'
}

task runHelpline(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.helpline.Main'
}
