plugins 
{
    id 'java-library'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0-rc-2'
}

if(System.getProperty("PUBLISH_SCRIPT_PATH"))
	apply from: System.getProperty("PUBLISH_SCRIPT_PATH")

group = 'jadex'

sourceCompatibility = 1.17

repositories
{
    mavenCentral()
}

dependencies
{
	def v = System.getProperty('JADEX_VERSION')?:'+'
	implementation 'jadex:common:'+v
	implementation 'jadex:collection:'+v
	implementation 'jadex:classreader:'+v
	implementation 'jadex:future:'+v
    implementation 'jadex:core:'+v
    implementation 'jadex:model:'+v
    implementation 'jadex:execution:'+v
    implementation 'jadex:micro:'+v
    implementation 'jadex:providedservice:'+v
    implementation 'jadex:providedservicemicro:'+v
    implementation 'jadex:requiredservice:'+v
    implementation 'jadex:requiredservicemicro:'+v
    implementation 'jadex:publishservice:'+v
    implementation 'jadex:publishservicejetty:'+v
    //implementation 'jadex:simulation:'+v
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
}

processResources {
    from ('src/main/java') {
        include '**/*.png'
        include '**/*.html'
        include '**/*.js'
        include '**/*.css'
        include '**/*.ttf'
    }
}

task runHelloWorld(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.helloworld.HelloWorldAgent'
}

task runMandelbrot(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.mandelbrot_new.MainWeb'
}

task runQuiz(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.quiz.Main'
}

task runGobble(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.gobble.GobbleAgent'
}

task runHelpline(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'jadex.micro.helpline.Main'
}
