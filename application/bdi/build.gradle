plugins 
{
    id 'java-library'
}

description = 'BDI agent examples'

group = 'org.activecomponents.jadex'

if(System.getProperty("PUBLISH_SCRIPT_PATH"))
	apply from: System.getProperty("PUBLISH_SCRIPT_PATH")

java
{
	sourceCompatibility = '1.21'
}

repositories
{
    mavenCentral()
}

dependencies
{
	def v = System.getProperty('JADEX_VERSION')?:'+'
	implementation 'org.activecomponents.jadex:common:' + v
	implementation 'org.activecomponents.jadex:collection:' + v
	implementation 'org.activecomponents.jadex:future:' + v
    implementation 'org.activecomponents.jadex:core:' + v
    implementation 'org.activecomponents.jadex:execution:' + v
    implementation 'org.activecomponents.jadex:injection:' + v
    implementation 'org.activecomponents.jadex:bdi:' + v
    implementation 'org.activecomponents.jadex:environment:'+v
    
    // libgdx for game ui
	implementation 'com.badlogicgames.gdx:gdx:1.12.1'
    implementation 'com.badlogicgames.gdx:gdx-backend-lwjgl3:1.12.1'
    implementation 'com.badlogicgames.gdx:gdx-platform:1.12.1:natives-desktop'
}

processResources {
    from ('src/main/java') {
        include '**/*.png'
    }
}

task runHelloWorld(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'jadex.bdi.hellopure.HelloPureAgent'
}

task runUni(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'jadex.bdi.university.Main'
}

task runBlocksWorld(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'jadex.bdi.blocksworld.Main'
}

task runPuzzle(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'jadex.bdi.puzzle.Main'
}