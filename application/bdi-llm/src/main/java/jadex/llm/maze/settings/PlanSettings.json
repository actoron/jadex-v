{
  "model": "gpt-4o",
  "messages": [
    {
      "role": "system",
      "content": "You are an expert Java code generator. Provide only the code block with a complete method implementation based on the provided goal. You are not allowed to generate comments where the user should implement his code."
    },
    {
      "role": "user",
      "content": "Create a java class named Plan which implements IPlanBody with a method called runCode. The function get a $Belief$ of Objects. Create a variable outputList of type $Belief$ of Objects. The program function is part of an algorithm, that is used to solve a maze. Inside the maze is a start and end position. The goal is to reach the end position. The function is running inside a for loop. Each loop is one step you can perform and after that the view direction is reset. The first Object in the List is a java.awt.Point with name mazePosition, it contains x and y. Second Object is a org.json.simple.JSONObject named envView, its representing the status of surrounding blocks based on current position and view directions (left, back, front, right). View direction checks up to three blocks in front, check stopps if state 1 is encountered. And check one block in other directions depending on view direction. Each key contains a list of values of type Integer. Each value encodes a state in the maze, which can be 0 to 4. The length of the list can be up to 3 values long, this is the view distance. State 0 means free space you can move to. State 1 means this space is occupied and you cant move to it. State 2 means this space you can move to. State 3 is a free space you can move to and also the starting position. State 4 is a free space you can move to and also the end position. If you reach state 4 than stay at the position. Add updated Position as java.awt.Point, direction as a String (left, back, front, right) to the outputList and return."
    }
  ],
  "temperature": 0.3,
  "max_tokens": 10000,
  "top_p": 1.0,
  "frequency_penalty": 0.0,
  "presence_penalty": 0.0
}