plugins 
{
	id 'java-library'
	id 'java-test-fixtures'
	id 'eclipse'
}

group = 'jadex'

sourceCompatibility	= 1.17

repositories
{
	mavenCentral()
}

dependencies
{
	implementation 'jadex:core:5.0.0'
	implementation 'jadex:execution:5.0.0'
	implementation 'jadex:model:5.0.0'
	implementation 'jadex:micro:5.0.0'
	implementation 'jadex:common:5.0.0'
	implementation 'jadex:future:5.0.0'
	implementation 'jadex:javaparser:5.0.0'
	implementation 'jadex:collection:5.0.0'
	implementation 'jadex:classreader:5.0.0'
	implementation 'jadex:bytecode:5.0.0'
	implementation 'jadex:eca:5.0.0'
	
	implementation 'org.ow2.asm:asm:9.1'
	implementation 'org.ow2.asm:asm-tree:9.1'
	implementation 'org.ow2.asm:asm-util:9.1'

	testFixturesImplementation 'jadex:future:5.0.0'
	testFixturesImplementation 'jadex:eca:5.0.0'
	testFixturesImplementation 'jadex:core:5.0.0'
	testFixturesImplementation 'jadex:model:5.0.0'
	testFixturesImplementation 'jadex:micro:5.0.0'
	
	testImplementation testFixtures('jadex:core:5.0.0')
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'

	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

test 
{
  useJUnitPlatform()
}

// Hack for broken test fixtures in eclipse
// cf. https://github.com/eclipse/buildship/issues/1206#issuecomment-1367742986
eclipse.classpath {
    file.whenMerged { classpath ->
        classpath.entries.findAll { entry -> entry instanceof org.gradle.plugins.ide.eclipse.model.ProjectDependency && entry.entryAttributes.test }
        	.each { it.entryAttributes['test'] = 'false' }
	}
}

task copyDependencies {
    doLast {
        copy {
            configurations.compileClasspath.each { File file ->
                  if (!file.absolutePath.startsWith(project.rootDir.absolutePath)) {
                    if (file.name.endsWith('.jar'))
                        from file.getParent()
                }
            } 
            into 'build/libs/external-dependencies'
        }
    }
    outputs.upToDateWhen { false }
}
build.dependsOn(copyDependencies)